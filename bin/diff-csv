#!/usr/bin/env python3
"""Normalize ordering in two CSV files and run diff on them.
"""
__copyright__ = 'Copyright (C) 2021 Martin Blais. All Rights Reserved.'
__author__ = 'Martin Blais <blais@furius.ca>'

import argparse
import io
import subprocess
import tempfile

import petl
petl.config.look_style = 'minimal'
petl.config.failonerror = True


def main():
    parser = argparse.ArgumentParser(description=__doc__.strip())

    parser.add_argument('left', help='Left filename')
    parser.add_argument('right', help='Right filename')

    parser.add_argument('-d', '--diff-command', default='diff', action='store',
                        help="Diff program to run.")

    parser.add_argument('-k', '--key', action='store',
                        help="Key column to sort by.")

    args = parser.parse_args()


    with (tempfile.NamedTemporaryFile(mode='w', suffix='.left') as left_file,
          tempfile.NamedTemporaryFile(mode='w', suffix='.right') as right_file):

        left_table = petl.fromcsv(args.left)
        left_header = left_table.fieldnames()
        if args.key:
            left_table = left_table.sort(args.key)
        print(left_table.lookallstr(), file=left_file)
        left_file.flush()

        right_table = petl.fromcsv(args.right)
        right_header = list(right_table.fieldnames())

        #print(left_header)
        #print(right_header)

        new_header = []
        for col in left_header:
            if not col:
                continue
            try:
                right_header.remove(col)
            except ValueError:
                pass
            else:
                new_header.append(col)
        new_header.extend(right_header)
        #print(new_header)

        right_table = petl.fromcsv(args.right)
        for index, col in enumerate(new_header):
            right_table = right_table.movefield(col, index)
        if args.key:
            right_table = right_table.sort(args.key)
        print(right_table.lookallstr(), file=right_file)
        right_file.flush()

        command = [args.diff_command, left_file.name, right_file.name]
        subprocess.call(command, shell=False)


if __name__ == '__main__':
    main()
